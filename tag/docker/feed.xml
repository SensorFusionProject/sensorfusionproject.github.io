<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="/tag/docker/feed.xml" rel="self" type="application/atom+xml" />
  <link href="/" rel="alternate" type="text/html" />
  <updated>2021-05-06T17:53:09+00:00</updated>
  <id>/tag/docker/feed.xml</id>

  
  
  

  
    <title type="html">Sensor Fusion Project | </title>
  

  
    <subtitle>RaDAR + Camera + LiDAR</subtitle>
  

  

  
    
      
    
      
    
      
    
  

  
  

  
    <entry>
      <title type="html">How to add a new module in docker container</title>
      <link href="/how-to-add-new-module-in-docker" rel="alternate" type="text/html" title="How to add a new module in docker container" />
      <published>2020-11-27T00:00:00+00:00</published>
      <updated>2020-11-27T00:00:00+00:00</updated>
      <id>/how-to-add-new-module-in-docker</id>
      <content type="html" xml:base="/how-to-add-new-module-in-docker">&lt;h2 id=&quot;modify-dockerfile&quot;&gt;Modify Dockerfile&lt;/h2&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;
cd ~/SensorFusion/ros
vim Dockerfile
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; surely your can use gedit or vscode
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Add a new module to be installed in the docker container after the command “sudo apt-get install -y &quot;&lt;/li&gt;
  &lt;li&gt;The back slash (\) make the next line to be joined to previous one. So there is no need to put it on the last line.&lt;/li&gt;
  &lt;li&gt;You can bring another RUN header for your own shell command.
&lt;img src=&quot;/assets/images/post/2020-11-27/modify_dockerfile.png&quot; alt=&quot;Modify Dockerfile&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;temporally-modify-the-run-dockersh-to-use-your-own-container-to-be-built-with-the-dockerfile&quot;&gt;Temporally modify the run-docker.sh to use your own container to be built with the Dockerfile&lt;/h2&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;
cd ~/SensorFusion/ros/catkin_ws
vim run-docker.sh
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; surely your can use gedit or vscode
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Replace the “IMAGE=’coolwindjo/ros-melodic:latest’” with “IMAGE=’ros-melodic:latest’” by removing and adding sharps(#)
&lt;img src=&quot;/assets/images/post/2020-11-27/modify_rundocker.png&quot; alt=&quot;Modify run-docker.sh&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;execute-the-script-for-building-the-dockerfile-and-running-the-corresponding-docker-container&quot;&gt;Execute the script for building the Dockerfile and running the corresponding docker container&lt;/h2&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/SensorFusion/ros
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; chmod 755 build_and_run.sh
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ./build_and_run.sh
&lt;span class=&quot;c&quot;&gt;...
...
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;test-your-new-module&quot;&gt;Test your new module&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Now, you can test your new module in the new docker container.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;push-the-dockerfile-only-and-reset-the-others&quot;&gt;Push the Dockerfile only and reset the others&lt;/h2&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;
git add ros/Dockerfile
git commit -m &quot;update the Dockerfile by adding new module&quot;
git push
git reset --hard HEAD

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>CoolWind</name>
        
        
      </author>

      

      
        <category term="getting-started" />
      
        <category term="docker" />
      

      
        <summary type="html">Modify Dockerfile</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">How to start the Sensor Fusion Project</title>
      <link href="/how-to-start-the-sensor-fusion" rel="alternate" type="text/html" title="How to start the Sensor Fusion Project" />
      <published>2020-11-26T00:00:00+00:00</published>
      <updated>2020-11-26T00:00:00+00:00</updated>
      <id>/how-to-start-the-sensor-fusion</id>
      <content type="html" xml:base="/how-to-start-the-sensor-fusion">&lt;h2 id=&quot;generate-your-ssh-key-for-your-convenient-git-work&quot;&gt;Generate your SSH key for your convenient git work&lt;/h2&gt;

&lt;p&gt;If you don’t already have an SSH key, you must generate a new SSH key. If you’re unsure whether you already have an SSH key, check for existing keys.&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; ~/.ssh/id_rsa.pub
&lt;span class=&quot;go&quot;&gt;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDltFNAyuz2eRra1NIdYC9Nh/3e/OQh4JXXuvFTv/s
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;4WYyGjrFOrpLMhDvO9Zo8o2tChlv1GxYpBMMAOHS1DEHUeGp3nVWF12qAT5tntVc5THy7Xw== coolwind@hotmail.co.kr

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you don’t want to reenter your passphrase every time you use your SSH key, you can add your key to the SSH agent, which manages your SSH keys and remembers your passphrase.&lt;/p&gt;

&lt;p&gt;Paste the text below, substituting in your GitHub email address.&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;
ssh-keygen -t rsa -b 4096 -C &quot;your_github_email@example.com&quot;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This creates a new ssh key, using the provided email as a label.&lt;/p&gt;

&lt;p&gt;Generating public/private rsa key pair.
When you’re prompted to “Enter a file in which to save the key,” press Enter. This accepts the default file location.&lt;/p&gt;

&lt;p&gt;Enter a file in which to save the key (/c/Users/you/.ssh/id_rsa):[Press enter]
At the prompt, type a secure passphrase. For more information, see “Working with SSH key passphrases”.
Enter passphrase (empty for no passphrase): [Type a passphrase]
Enter same passphrase again: [Type passphrase again]&lt;/p&gt;

&lt;p&gt;Now, check for your new generated key.&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; ~/.ssh/id_rsa.pub
&lt;span class=&quot;go&quot;&gt;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDltFNAyuz2eRra1NIdYC9Nh/3e/OQh4JXXuvFTv/s
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;4WYyGjrFOrpLMhDvO9Zo8o2tChlv1GxYpBMMAOHS1DEHUeGp3nVWF12qAT5tntVc5THy7Xw== coolwind@hotmail.co.kr

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;add-the-ssh-key-to-your-github-account&quot;&gt;Add the SSH key to your GitHub account&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Go to Settings on your GitHub Profile
&lt;img src=&quot;/assets/images/post/2020-11-26/github_page1.png&quot; alt=&quot;Add the SSH key to your GitHub account 1&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Find the button saying New SSH key and Click it
&lt;img src=&quot;/assets/images/post/2020-11-26/github_page2.png&quot; alt=&quot;Add the SSH key to your GitHub account 2&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Paste the string you’ve got from the terminal and set a nickname for the SSH key
&lt;img src=&quot;/assets/images/post/2020-11-26/github_page3.png&quot; alt=&quot;Add the SSH key to your GitHub account 3&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;clone-the-sensorfusion-repository&quot;&gt;Clone the SensorFusion Repository&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Clone the repository using your SSH key
&lt;img src=&quot;/assets/images/post/2020-11-26/github_page4.png&quot; alt=&quot;Clone with SSH key from your GitHub account&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;
git clone --recursive git@github.com:SensorFusionProject/SensorFusion.git

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;If you want to update submodule after cloning the repository&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;
git submodule update --init --recursive

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;install-docker-on-your-linux-ubuntu&quot;&gt;Install Docker on your linux (Ubuntu)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.docker.com/engine/install/ubuntu/&quot; target=&quot;_blank&quot;&gt;Find the method from the official homepage&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user&quot; target=&quot;_blank&quot;&gt;Manage Docker as a non-root user&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;execute-the-script-for-running-ros-docker&quot;&gt;Execute the script for running ROS docker&lt;/h2&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/SensorFusion/ros/catkin_ws
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; chmod 755 run-docker.sh
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ./run-docker.sh
&lt;span class=&quot;go&quot;&gt;./run-docker.sh
Error: No such object: ros-melodic-dev
non-network local connections being added to access control list
bash: /root/catkin_ws/devel/setup.bash: No such file or directory
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;root@650025ccb1f3:/#&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;then-execute-catkin_make-by-typing-cm&quot;&gt;Then execute “catkin_make” by typing “cm”&lt;/h2&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;root@650025ccb1f3:/#&lt;/span&gt; cm
&lt;span class=&quot;go&quot;&gt;Base path: /root/catkin_ws
Source space: /root/catkin_ws/src
Build space: /root/catkin_ws/build
Devel space: /root/catkin_ws/devel
Install space: /root/catkin_ws/install
Creating symlink &quot;/root/catkin_ws/src/CMakeLists.txt&quot; pointing to &quot;/opt/ros/melodic/share/catkin/cmake/toplevel.cmake&quot;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;...
...
...
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;[ 98%] Built target canopen_motor
Scanning dependencies of target canopen_motor_node
[ 98%] Building CXX object radar_package/ros_canopen/canopen_motor_node/CMakeFiles/canopen_motor_node.dir/src/canopen_motor_chain_node.cpp.o
[100%] Linking CXX executable /root/catkin_ws/devel/lib/canopen_motor_node/canopen_motor_node
[100%] Built target canopen_motor_node
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;root@9b7c0bfc6d18:~/catkin_ws#&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;open-another-terminal-and-attach-it-to-the-running-container&quot;&gt;Open another terminal and attach it to the running container&lt;/h2&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/SensorFusion/ros/catkin_ws
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ./run-docker.sh
&lt;span class=&quot;go&quot;&gt;./run-docker.sh
non-network local connections being added to access control list
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;root@650025ccb1f3:/#&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It’s done!&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>CoolWind</name>
        
        
      </author>

      

      
        <category term="getting-started" />
      
        <category term="ros" />
      
        <category term="docker" />
      
        <category term="git" />
      

      
        <summary type="html">Generate your SSH key for your convenient git work</summary>
      

      
      
    </entry>
  
</feed>
